1. Instalacja projektu:
symfony new BookStore --webapp

I certyfikaty:
symfony server:ca:install

Uruchomienie aplikacji:
bin/console symfony server:start
php bin/console doctrine:query:sql 'SELECT * FROM article WHERE id = 1'
php bin/console debug:autowiring request
php bin/console debug:router
php bin/console doctrine:fixtures:load
php bin/console debug:container flysystem

php bin/console make:entity
php bin/console make:migration
php bin/console doctrine:migrations:migrate


2. Wstępna instalacja paczek (bundli):

# Doctrine
composer require symfony/orm-pack
composer require --dev symfony/maker-bundle
composer require zenstruck/foundry --dev
composer require symfony/validator

# Routing to JS
composer require friendsofsymfony/jsrouting-bundle
# php bin/console assets:install --symlink public
# php bin/console fos:js-routing:dump --format=json --target=public/js/fos_js_routes.json

# Apache
composer require symfony/apache-pack

# Var Dumper
composer require --dev symfony/var-dumper

# Attributes / Route
composer require doctrine/annotations

# Security
composer require symfony/security-bundle

# Messenger
composer require symfony/messenger
composer require symfony/doctrine-messenger
composer require symfony/amqp-messenger

# Mailer
composer require symfony/mailer

# Easy Admin
composer require easycorp/easyadmin-bundle

# Forms
composer require symfony/form

# Api Platform
symfony composer req api

# Testing
composer require --dev symfony/test-pack

# Webpack
composer require symfony/webpack-encore-bundle

# Uuid Ramsey
composer require ramsey/uuid-doctrine

# Faker and Fixtures
composer require hautelook/alice-bundle

# Serializer
composer require serializer

3. Instalacja Bibliotek Front
Libraries:
# yarn install
# yarn add bootstrap --dev
# yarn add jquery @popperjs/core --dev
# yarn add react react-dom prop-types
# yarn add axios
# yarn add sass-loader@^12.0.0 sass --dev
# yarn add reactstrap
# yarn add @babel/preset-react@^7.0.0 --dev
# yarn add @fortawesome/fontawesome-free

4. Uruchamianie Dockera:
docker-compose up -d --build
docker-compose up -d
symfony ps
symfony:open:local:rabbit

5. Generowanie Routingu JS (należy pamiętać o expose! options: ["expose" => true])
php bin/console assets:install --symlink public
php bin/console fos:js-routing:dump --format=json --target=public/js/fos_js_routes.json

6. Messenger
php bin/console messenger:consume async

7. Tests
./vendor/bin/phpunit

8. Uploads files
composer require oneup/flysystem-bundle
composer require "aws/aws-sdk-php:^3.87"
composer require "league/flysystem-aws-s3-v3:^1.0"

